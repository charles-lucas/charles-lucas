#!/usr/bin/bash


echo "Cleanup Old Files"
rm *.key *.req *.srl *.crt *.pem *.pub *.p12 *.p7b *.jks
rm -rf export generated keystores

echo "Making Root CA"
openssl genrsa -out root.key 3072
openssl req -new -key root.key -out root.req -subj "/C=US/ST=CA/L=San Diego/O=TEST-RSA/OU=TEST-RSA/CN=TEST Root RSA"
openssl x509 -req -days 7300 -sha256 -in root.req -CAcreateserial -signkey root.key -out "TEST_Root.crt" -extfile rootExtensions
cat "TEST_Root.crt" root.key > root.pem
openssl rsa -in root.pem -pubout -out root.pub
openssl pkcs12 -export -in root.pem -out "TEST_Root.p12" -name "TEST Root RSA" -passout "pass:password"
openssl crl2pkcs7 -nocrl -certfile root.pem -out "TEST_Root.p7b"

echo "Making Sub CA"
openssl genrsa -out subca.key 3072
openssl req -new -key subca.key -out subca.req -subj "/C=US/ST=CA/L=San Diego/O=TEST-RSA/OU=TEST-RSA/CN=TEST Sub CA RSA"
openssl x509 -req -days 7300 -sha256 -in subca.req -CAcreateserial -CA "TEST_Root.crt" -CAkey root.key -out "TEST_Sub_CA.crt" -extfile subCaExtensions
cat "TEST_Root.crt" "TEST_Sub_CA.crt" subca.key > subca.pem
openssl rsa -in subca.pem -pubout -out subca.pub
openssl pkcs12 -export -in subca.pem -out "TEST_Sub_CA.p12" -name "TEST Sub CA RSA" -passout "pass:password"
openssl crl2pkcs7 -nocrl -certfile subca.pem -out "TEST_Sub_CA.p7b"

echo "Making Server Credential"
openssl genrsa -out server.key 3072
openssl req -new -key server.key -out server.req -subj "/C=US/ST=CA/L=San Diego/O=TEST-RSA/OU=TEST-RSA/CN=localhost"
openssl x509 -req -days 1825 -sha256 -in server.req -CAcreateserial -CA "TEST_Sub_CA.crt" -CAkey subca.key -out "TEST_Server.crt" -extfile extensions
cat "TEST_Root.crt" "TEST_Sub_CA.crt" "TEST_Server.crt" server.key > server.pem
openssl rsa -in server.pem -pubout -out server.pub
openssl pkcs12 -export -in server.pem -out "TEST_Server.p12" -name "TEST Server RSA" -passout "pass:password"
openssl crl2pkcs7 -nocrl -certfile server.pem -out "TEST_Server.p7b"

echo "Making Client Credential"
openssl genrsa -out client.key 3072
openssl req -new -key client.key -out client.req -subj "/C=US/ST=CA/L=San Diego/O=TEST-RSA/OU=TEST-RSA/CN=TEST Client RSA"
openssl x509 -req -days 1825 -sha256 -in client.req -CAcreateserial -CA "TEST_Sub_CA.crt" -CAkey subca.key -out "TEST_Client.crt" -extfile extensions
cat "TEST_Root.crt" "TEST_Sub_CA.crt" "TEST_Client.crt" client.key > client.pem
openssl rsa -in client.pem -pubout -out client.pub
openssl pkcs12 -export -in client.pem -out "TEST_Client.p12" -name "TEST Client RSA" -passout "pass:password"
openssl crl2pkcs7 -nocrl -certfile client.pem -out "TEST_Client.p7b"

echo "Moving Generated Files For Internal Use"
if [ ! -d generated ]; then
  mkdir generated
fi
  mv *.key generated/.
  mv *.req generated/.
  mv *.srl generated/.
  mv *.pem generated/.
  mv *.pub generated/.

echo "Moving Exportable Credentials"
#if not exist export mkdir export
if [ ! -d export ]; then
  mkdir export
fi
mv *.crt export/.
mv *.p12 export/.
mv *.p7b export/.

echo "Java Keystore Files"
#if not exist keystore mkdir keystore
if [ ! -d keystores ]; then
  mkdir keystores
fi
keytool -v -importkeystore -srckeystore "export/TEST_Client.p12" -srcstoretype PKCS12 -srcstorepass password -destkeystore keystores/keystore -deststorepass testtest
#keytool -v -importkeystore -srckeystore "export/TEST Client.p12" -srcstoretype PKCS12 -srcstorepass password -destkeystore keystore/jenmClientKeystore.bcfks -deststorepass password -deststoretype BCFKS -destprovidername BCFIPS -providerclass org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider

keytool -v -importkeystore -srckeystore "export/TEST_Server.p12" -srcstoretype PKCS12 -srcstorepass password -destkeystore keystores/serverKeystore -deststorepass testtest
#keytool -v -importkeystore -srckeystore "export/TEST Server.p12" -srcstoretype PKCS12 -srcstorepass password -destkeystore keystore/jenmServerKeystore.bcfks -deststorepass password -deststoretype BCFKS -destprovidername BCFIPS -providerclass org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider

keytool -import -noprompt -file "export/TEST_Root.crt" -keystore keystores/truststore -storepass testtest
#keytool -v -import -noprompt -file "export/TEST Root.crt" -keystore keystore/jenmTruststore.bcfks -storepass password -storetype BCFKS -providername BCFIPS -providerclass org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider
